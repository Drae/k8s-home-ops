---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: downloads
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 30m
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
          setGateway: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          initContainers:
            01-litestream-init:
              image:
                repository: litestream/litestream
                tag: 0.3.11
              args:
                [
                  "restore",
                  "-if-db-not-exists",
                  "-if-replica-exists",
                  "-v",
                  "/config/radarr.db",
                ]
              env:
                LITESTREAM_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
                LITESTREAM_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY_ID}
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.0.688@sha256:cc88687162269b73c0e9bd6f147d4f7957639a4bdae3741cffe4bcabd7978e1f
            env:
              SONARR__API_KEY: ${SONARR_API_KEY}
              SONARR__INSTANCE_NAME: Sonarr
              SONARR__PORT: &port 8989
              SONARR__AUTHENTICATION_METHOD: External
              SONARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              SONARR__THEME: dark
            resources:
              requests:
                memory: 250Mi
                cpu: 25m
              limits:
                memory: 500Mi
          litestream:
            image:
              repository: litestream/litestream
              tag: 0.3.11
            args: ["replicate"]
            env:
              LITESTREAM_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
              LITESTREAM_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY_ID}
    service:
      main:
        ports:
          http:
            port: *port
      litestream:
        ports:
          metrics:
            port: 9090
    ingress:
      main:
        enabled: true
        className: ingress-nginx-int
        hosts:
          - host: &host "sonarr.${SECRET_DOMAIN_PROXY}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      media:
        enabled: true
        existingClaim: nfs-apollo--media
        globalMounts:
          - path: /mnt/media/
      litestream-init-config:
        enabled: true
        type: configMap
        name: radarr-litestream
        advancedMounts:
          main:
            01-litestream-init:
              - path: /etc/litestream.yml
                subPath: litestream.yml
      litestream-init-data:
        enabled: true
        existingClaim: sonarr-config
        advancedMounts:
          main:
            01-litestream-init:
              - path: /config
      litestream-config:
        enabled: true
        type: configMap
        name: radarr-litestream
        advancedMounts:
          main:
            litestream:
              - path: /etc/litestream.yml
                subPath: litestream.yml
      litestream-data:
        enabled: true
        existingClaim: sonarr-config
        advancedMounts:
          main:
            litestream:
              - path: /config
