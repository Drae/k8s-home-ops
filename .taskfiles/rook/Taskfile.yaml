---
version: "3"

x-task-vars: &task-vars
  node: "{{.node}}"
  ceph_disk: "{{.ceph_disk}}"
  ts: "{{.ts}}"
  jobName: "{{.jobName}}"

vars:
  ts: '{{now | date "150405"}}'
  ROOK_SCRIPTS_DIR: "{{.ROOT_DIR}}/.taskfiles/rook/scripts"
  ROOK_TEMPLATES_DIR: "{{.ROOT_DIR}}/.taskfiles/rook/templates"

tasks:
  wipe-node-alpha:
    desc: Trigger a wipe of Rook-Ceph data on node "alpha"
    cmds:
      - task: wipe-disk
        vars:
          node: "{{.node}}"
          ceph_disk: "/dev/nvme0n1"
          cluster: "{{.cluster}}"
      - task: wipe-data
        vars:
          node: "{{.node}}"
          cluster: "{{.cluster}}"
    vars:
      node: alpha
    requires:
      vars:
        - cluster

  wipe-disk:
    desc: Wipe all remnants of rook-ceph from a given disk (ex. task rook:wipe-disk node=alpha ceph_disk="/dev/nvme0n1")
    silent: true
    internal: true
    cmds:
      - envsubst < <(cat {{.ROOK_TEMPLATES_DIR}}/WipeDiskJob.tmpl.yaml) | kubectl --context {{.cluster}} apply -f -
      - bash {{.ROOK_SCRIPTS_DIR}}/wait-for-job.sh {{.wipeCephDiskJobName}} default {{.cluster}}
      - kubectl --context {{.context}} -n default wait job/{{.wipeCephDiskJobName}} --for condition=complete --timeout=1m
      - kubectl --context {{.context}} -n default logs job/{{.wipeCephDiskJobName}} --container list
      - kubectl --context {{.context}} -n default delete job {{.wipeCephDiskJobName}}
    vars:
      node: '{{ or .node (fail "`node` is required") }}'
      ceph_disk: '{{ or .ceph_disk (fail "`ceph_disk` is required") }}'
      jobName: wipe-disk-{{.node}}-{{.ceph_disk | replace "/" "-"}}
      wipeRookDiskJobTemplate: "WipeDiskJob.tmpl.yaml"
      cluster: '{{ or .cluster (fail "`cluster` is required") }}'
    env: *task-vars
    preconditions:
      - test -f {{.ROOK_SCRIPTS_DIR}}/wait-for-job.sh
      - test -f {{.ROOK_TEMPLATES_DIR}}/WipeDiskJob.tmpl.yaml

  wipe-data:
    desc: Wipe all remnants of rook-ceph from a given disk (ex. task rook:wipe-data node=alpha)
    silent: true
    internal: true
    cmds:
      - envsubst < <(cat {{.ROOK_TEMPLATES_DIR}}/WipeDataJob.tmpl.yaml) | kubectl --context {{.cluster}} apply -f -
      - bash {{.ROOK_SCRIPTS_DIR}}/wait-for-job.sh {{.wipeCephDiskJobName}} default {{.cluster}}
      - kubectl --context {{.context}} -n default wait job/{{.wipeRookDataJobName}} --for condition=complete --timeout=1m
      - kubectl --context {{.context}} -n default logs job/{{.wipeRookDataJobName}} --container list
      - kubectl --context {{.context}} -n default delete job {{.wipeRookDataJobName}}
    vars:
      node: '{{ or .node (fail "`node` is required") }}'
      jobName: wipe-data-{{.node}}
      wipeRookDataJobTemplate: "WipeRookDataJob.tmpl.yaml"
      cluster: '{{ or .cluster (fail "`cluster` is required") }}'
    env: *task-vars
    preconditions:
      - test -f {{.ROOK_SCRIPTS_DIR}}/wait-for-job.sh
      - test -f {{.ROOK_TEMPLATES_DIR}}/WipeDataJob.tmpl.yaml
