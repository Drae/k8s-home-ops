clusterName: kube-cluster

talosVersion: v1.1.0
kubernetesVersion: v1.24.2

endpoint: https://${clusterEndpointIP}:6443

allowSchedulingOnMasters: true

clusterPodNets:
  - 10.200.0.0/16
clusterSvcNets:
  - 10.210.0.0/12

cniConfig:
  name: custom
  urls:
    - https://raw.githubusercontent.com/drae/gitops-starstreak.net/main/talos/cni/install.yaml

nodes:
  - hostname: kube-cp-01
    ipAddress: 10.1.10.21
    controlPlane: true
    installDisk: /dev/nvme1n1
    nameservers:
      - 10.1.10.1
    networkInterfaces:
      - interface: eth0
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    configPatches:
      - op: add
        path: /cluster/apiServer/certSANs
        value:
          - 10.1.10.20
          - kube-cp-01
          - kube-cluster.${domainName}
  - hostname: kube-cp-02
    ipAddress: 10.1.10.22
    controlPlane: true
    installDisk: /dev/nvme0n1
    nameservers:
      - 10.1.10.1
    networkInterfaces:
      - interface: eth0
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    configPatches:
      - op: add
        path: /cluster/apiServer/certSANs
        value:
          - 10.1.10.20
          - kube-cp-02
          - kube-cluster.${domainName}
  - hostname: kube-cp-03
    ipAddress: 10.1.10.23
    controlPlane: true
    installDisk: /dev/nvme0n1
    nameservers:
      - 10.1.10.1
    networkInterfaces:
      - interface: eth0
        mtu: 1500
        dhcp: true
        vip:
          ip: ${clusterEndpointIP}
    configPatches:
      - op: add
        path: /cluster/apiServer/certSANs
        value:
          - 10.1.10.20
          - kube-cp-03
          - kube-cluster.${domainName}

controlPlane:
  configPatches:
    - op: add
      path: /machine/kubelet/extraArgs
      value:
        feature-gates: GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true,ServerSideApply=true
        rotate-server-certificates: "false"

  inlinePatch:
    cluster:
      aescbcEncryptionSecret: ${aescbcEncryptionKey}
      aggregatorCA:
        crt: ${k8sAggregatorCert}
        key: ${k8sAggregatorCertKey}
      ca:
        crt: ${clusterCert}
        key: ${clusterCertKey}
      etcd:
        ca:
          crt: ${etcdCert}
          key: ${etcdCertKey}
      secret: ${clusterSecret}
      serviceAccount:
        key: ${k8sServiceAccountKey}
      token: ${clusterToken}
      extraManifests:
        - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/v0.5.1/deploy/ha-install.yaml

    machine:
      ca:
        crt: ${machineCert}
        key: ${machineCertKey}
      network:
        extraHostEntries:
          - ip: ${clusterEndpointIP}
            aliases:
              - kube-cluster
              - kube-cluster.${domainName}
          - ip: 10.1.10.1
            aliases:
              - gw
              - gw.${domainName}
          - ip: 10.1.10.10
            aliases:
              - apollo
              - apollo.${domainName}
      time:
        servers:
          - 10.1.10.5
          - time.cloudflare.com
      token: ${machineToken}
      udev:
        rules:
          - SUBSYSTEM=="drm", KERNEL=="card*", GROUP="44", MODE="0660"
          - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

worker:
  configPatches:
    - op: add
      path: /machine/kubelet/extraArgs
      value:
        feature-gates: GracefulNodeShutdown=true,MixedProtocolLBService=true,EphemeralContainers=true,ServerSideApply=true
        rotate-server-certificates: "false"

  inlinePatch:
    cluster:
      aescbcEncryptionSecret: ${aescbcEncryptionKey}
      ca:
        crt: ${clusterCert}
        key: ${clusterCertKey}
      secret: ${clusterSecret}
      token: ${clusterToken}

    machine:
      ca:
        crt: ${machineCert}
        key: ${machineCertKey}
      network:
        extraHostEntries:
          - ip:
          - ip: 10.1.10.1
            aliases:
              - gw
              - gw.${domainName}
          - ip: 10.1.10.10
            aliases:
              - apollo
              - apollo.${domainName}
      time:
        servers:
          - 10.1.10.5
          - time.cloudflare.com
      token: ${machineToken}
      udev:
        rules:
          - SUBSYSTEM=="drm", KERNEL=="card*", GROUP="44", MODE="0660"
          - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
